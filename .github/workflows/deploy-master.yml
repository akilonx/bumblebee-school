on:
  push:
    branches:
      - master

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      bbapi: ${{ steps.changes.outputs.bbapi }}
      bbreact: ${{ steps.changes.outputs.bbreact }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            bbapi:
              - 'bbapi/**'
            bbreact:
              - 'bbreact/**'

  bbapi:
    needs: changes
    if: ${{ needs.changes.outputs.bbapi == 'true' }}
    name: bbapi
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: bbapi
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci

      - name: Serverless deploy
        uses: serverless/github-action@v3.2
        with:
          args: -c "cd ./bbapi && serverless deploy"
          entrypoint: /bin/sh

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  bbreact:
    needs: changes
    if: ${{ needs.changes.outputs.bbreact == 'true' }}
    runs-on: ubuntu-latest
    name: deploy bbreact
    defaults:
      run:
        working-directory: bbreact
    strategy:
      matrix:
        node-version: ["18.12.1"]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install node dependencies
        run: npm ci && cd ./public/app && npm i --force

      - name: Run build
        run: CI=false npm run build

      - name: Serverless deploy to S3
        uses: serverless/github-action@v3.2
        with:
          args: -c "cd ./bbreact && serverless deploy"
          entrypoint: /bin/sh

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
